version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: task-system-mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-passwordWelcome@123}
    networks:
      - task-system-network

  # Redis service
  redis:
    image: redis:7.4.1-alpine
    container_name: task-system-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redisPassW0rd@1927}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - task-system-network

  # Central server service
  central_server:
    build:
      context: central_server/
      dockerfile: Dockerfile
    container_name: task-system-central-server
    restart: always
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGO_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASSWORD:-passwordWelcome@123}@mongodb:27017/
      - MONGO_DB_NAME=${MONGO_DB_NAME:-task_processing_system}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redisPassW0rd@1927}
      - API_HOST=0.0.0.0
      - API_PORT=${API_PORT:-8000}
    command: python3 -m app.main
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - task-system-network

# Volumes for data persistence
volumes:
  mongodb_data:
  redis_data:

# Network for service communication
networks:
  task-system-network:
    driver: bridge
